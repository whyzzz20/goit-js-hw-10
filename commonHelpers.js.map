{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\n\nconst myInput = document.querySelector(\"#datetime-picker\");\n\nconst startBtn = document.querySelector('[data-start]');\nconst timerDays = document.querySelector('[data-days]');\nconst timerHours = document.querySelector('[data-hours]');\nconst timerMinutes = document.querySelector('[data-minutes]');\nconst timerSeconds = document.querySelector('[data-seconds]');\n\nlet userSelectedDate;\n\nstartBtn.disabled = true;\n\nconst options = {\n    enableTime: true,\n    time_24hr: true,\n    defaultDate: new Date(),\n    minuteIncrement: 1,\n    onClose(selectedDates) {\n      console.log(selectedDates[0]);\n    },\n    onClose(selectedDates){\n      userSelectedDate = selectedDates[0]\n      if(selectedDates[0] <= Date.now()){\n        iziToast.show({\n          title: '❌',\n          message: 'Please choose a date in the future!',\n          position: 'topRight',\n          messageColor: '#fff',\n          messageSize: '20px',\n          backgroundColor: '#f54245',\n          close: false,\n          closeOnClick: true,\n          progressBarEasing: 'linear',\n        })\n      }else{\n        startBtn.disabled = false;\n        \n      }\n\n    }\n  };\n  flatpickr(myInput , options);\n\n  startBtn.addEventListener('click', e => {\n    const timer = setInterval(() => {\n      const result = userSelectedDate - Date.now();\n      const timeValue = convertMs(result);\n      if (result <= 0) {\n        clearInterval(timer);\n      } else {\n        timerDays.textContent = addLeadingZero(timeValue.days);\n        timerHours.textContent = addLeadingZero(timeValue.hours);\n        timerMinutes.textContent = addLeadingZero(timeValue.minutes);\n        timerSeconds.textContent = addLeadingZero(timeValue.seconds);\n      }\n    }, 1000);\n  });\n\n  function addLeadingZero(value) {\n    value = String(value);\n    return value.length < 2 ? value.padStart(2, '0') : value;\n  }\n\n  function convertMs(ms) {\n    const second = 1000;\n    const minute = second * 60;\n    const hour = minute * 60;\n    const day = hour * 24;\n\n    const days = Math.floor(ms / day);\n\n    const hours = Math.floor((ms % day) / hour);\n\n    const minutes = Math.floor(((ms % day) % hour) / minute);\n    const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n  \n    return { days, hours, minutes, seconds };\n  }"],"names":["myInput","startBtn","timerDays","timerHours","timerMinutes","timerSeconds","userSelectedDate","options","selectedDates","iziToast","flatpickr","e","timer","result","timeValue","convertMs","addLeadingZero","value","ms","days","hours","minutes","seconds"],"mappings":"8IAMA,MAAMA,EAAU,SAAS,cAAc,kBAAkB,EAEnDC,EAAW,SAAS,cAAc,cAAc,EAChDC,EAAY,SAAS,cAAc,aAAa,EAChDC,EAAa,SAAS,cAAc,cAAc,EAClDC,EAAe,SAAS,cAAc,gBAAgB,EACtDC,EAAe,SAAS,cAAc,gBAAgB,EAE5D,IAAIC,EAEJL,EAAS,SAAW,GAEpB,MAAMM,EAAU,CACZ,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrB,QAAQ,IAAIA,EAAc,CAAC,CAAC,CAC7B,EACD,QAAQA,EAAc,CACpBF,EAAmBE,EAAc,CAAC,EAC/BA,EAAc,CAAC,GAAK,KAAK,IAAG,EAC7BC,EAAS,KAAK,CACZ,MAAO,IACP,QAAS,sCACT,SAAU,WACV,aAAc,OACd,YAAa,OACb,gBAAiB,UACjB,MAAO,GACP,aAAc,GACd,kBAAmB,QAC7B,CAAS,EAEDR,EAAS,SAAW,EAIvB,CACL,EACES,EAAUV,EAAUO,CAAO,EAE3BN,EAAS,iBAAiB,QAASU,GAAK,CACtC,MAAMC,EAAQ,YAAY,IAAM,CAC9B,MAAMC,EAASP,EAAmB,KAAK,IAAG,EACpCQ,EAAYC,EAAUF,CAAM,EAC9BA,GAAU,EACZ,cAAcD,CAAK,GAEnBV,EAAU,YAAcc,EAAeF,EAAU,IAAI,EACrDX,EAAW,YAAca,EAAeF,EAAU,KAAK,EACvDV,EAAa,YAAcY,EAAeF,EAAU,OAAO,EAC3DT,EAAa,YAAcW,EAAeF,EAAU,OAAO,EAE9D,EAAE,GAAI,CACX,CAAG,EAED,SAASE,EAAeC,EAAO,CAC7B,OAAAA,EAAQ,OAAOA,CAAK,EACbA,EAAM,OAAS,EAAIA,EAAM,SAAS,EAAG,GAAG,EAAIA,CACpD,CAED,SAASF,EAAUG,EAAI,CAMrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAE1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EAEpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EACjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CAC1C"}